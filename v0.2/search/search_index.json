{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to Gramophone Gramophone is an exploration of spotify's luigi using spotify's api data. This is also a DevOps exercise. Getting started Commands mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Introduction"},{"location":"#welcome-to-gramophone","text":"Gramophone is an exploration of spotify's luigi using spotify's api data. This is also a DevOps exercise.","title":"Welcome to Gramophone"},{"location":"#getting-started","text":"","title":"Getting started"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs -h - Print help message and exit.","title":"Commands"},{"location":"code/","text":"Documentation for say_hello This class serves no purpose. Source code in hello/world.py 1 2 3 4 5 6 7 class HelloWorld : \"\"\"This class serves no purpose.\"\"\" def say_hello ( self ): \"\"\" This is our first function. It prints `Hello world!!`. \"\"\" print ( \"Hello world!!\" ) say_hello () This is our first function. It prints Hello world!! . Source code in hello/world.py 3 4 5 6 7 def say_hello ( self ): \"\"\" This is our first function. It prints `Hello world!!`. \"\"\" print ( \"Hello world!!\" )","title":"Functions"},{"location":"code/#documentation-for-say_hello","text":"This class serves no purpose. Source code in hello/world.py 1 2 3 4 5 6 7 class HelloWorld : \"\"\"This class serves no purpose.\"\"\" def say_hello ( self ): \"\"\" This is our first function. It prints `Hello world!!`. \"\"\" print ( \"Hello world!!\" )","title":"Documentation for say_hello"},{"location":"code/#hello.world.HelloWorld.say_hello","text":"This is our first function. It prints Hello world!! . Source code in hello/world.py 3 4 5 6 7 def say_hello ( self ): \"\"\" This is our first function. It prints `Hello world!!`. \"\"\" print ( \"Hello world!!\" )","title":"say_hello()"},{"location":"conrtibuting/","text":"Contributing Contributions are very welcome. Tests can be run with tox, please ensure the coverage at least stays the same before you submit a pull request. Distributed under the terms of the Apache 2.0 license, \"Gramophone\" is free and open source software. If you encounter any problems, please file an issue along with a detailed description. Development set up Follow the instructions bellow to set up your development environment: (Optional) Install poetry as in the official docs . Clone the repository: git clone git@github.com:dbbvitor/gramophone-spotify-pipeline.git Install this project dependencies: poetry install Set up the pre-commit hooks pre-commit install Code away!","title":"Contributing"},{"location":"conrtibuting/#contributing","text":"Contributions are very welcome. Tests can be run with tox, please ensure the coverage at least stays the same before you submit a pull request. Distributed under the terms of the Apache 2.0 license, \"Gramophone\" is free and open source software. If you encounter any problems, please file an issue along with a detailed description.","title":"Contributing"},{"location":"conrtibuting/#development-set-up","text":"Follow the instructions bellow to set up your development environment: (Optional) Install poetry as in the official docs . Clone the repository: git clone git@github.com:dbbvitor/gramophone-spotify-pipeline.git Install this project dependencies: poetry install Set up the pre-commit hooks pre-commit install Code away!","title":"Development set up"}]}