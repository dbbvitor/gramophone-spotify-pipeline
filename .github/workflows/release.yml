name: Python releases

on:
  release:
    types: [ published, edited ]

jobs:
  docker:
    if: github.repository == 'dbbvitor/gramophone-spotify-pipeline'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build and push version
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./Dockerfile
        push: true

        tags:
          ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:${{ github.event.release.tag_name }},
          ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:latest

    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}

  document:
    if: github.repository == 'dbbvitor/gramophone-spotify-pipeline'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: Install poetry
        run: pipx install poetry

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
          cache: "poetry"
      - run: poetry install --no-interaction --with docs

      - name: Build site
        run: poetry run mkdocs build

      - name: Install semver tag dependency
        run: npm install semver

      - name: Get latest release tag
        id: latest-release
        uses: actions/github-script@v6
        with:
          script: |
            try {
              const semver = require('semver');
              const release = await github.repos.listReleases({owner: context.repo.owner, repo: context.repo.repo});
              const tags = releases.map(release => release.tag_name);
              const latestTag = semver.maxSatisfying(tags, '*');
              const majorMinor = "v" + semver.major(latestTag) + "." semver.minor(latestTag);
              console.log("Latest semver tag: " + majorMinor);
            } catch (err) {
              console.error(err);
              fail("Error occurred while getting the latest tag: " + err.message);
            }

      - name: Deploy docs latest
        if: ${{ github.ref_name == steps.latest-release.outputs.majorMinor }}
        run: poetry run mike deploy --push --update-aliases ${{ steps.latest-release.outputs.majorMinor }} latest

      - name: Deploy docs latest
        if: ${{ github.ref_name != steps.latest-release.outputs.majorMinor }}
        run: poetry run mike deploy --push ${{ steps.latest-release.outputs.majorMinor }}
