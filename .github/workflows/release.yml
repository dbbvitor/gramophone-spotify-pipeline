name: Python releases

on:
  release:
    types: [published]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    - name: Build and push version
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:${{ github.event.release.tag_name }}
    - name: Build and push latest
      uses: docker/build-push-action@v3
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ secrets.DOCKER_HUB_USERNAME }}/${{ github.event.repository.name }}:latest

  document:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Add Poetry to $PATH
      run: echo "$HOME/.poetry/bin" >> $GITHUB_PATH
    - name: Cache Poetry
      id: cache-poetry
      uses: actions/cache@v3
      with:
        path: ~/.poetry
        key: poetry
    - name: Install latest version of Poetry
      if: steps.cache-poetry.outputs.cache-hit != 'true'
      run: curl -sSL https://install.python-poetry.org | python3 -
    - name: Add Poetry to $PATH
      run: echo "$HOME/.poetry/bin" >> $GITHUB_PATH
    - name: Get Poetry version
      run: poetry --version
    - name: Check pyproject.toml validity
      run: poetry check --no-interaction
    - name: Cache dependencies
      id: cache-deps
      uses: actions/cache@v3
      with:
        path: ${{github.workspace}}/.venv
        key: ${{ hashFiles('**/poetry.lock') }}
        restore-keys: ${{ hashFiles('**/poetry.lock') }}
    - name: Install deps
      if: steps.cache-deps.cache-hit != 'true'
      run: |
        poetry config virtualenvs.in-project true
        poetry install --no-interaction --only docs
    - name: Build site
      run: poetry run mkdocs build
    - name: Deploy docs
      run: poetry run mkdocs gh-deploy --force --clean --verbose
